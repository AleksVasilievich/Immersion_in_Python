"""
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ1
üìå –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥—É–ª—å logging –¥–ª—è
–≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –≤ —Ñ–∞–π–ª.
üìå –ù–∞–ø—Ä–∏–º–µ—Ä –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å.
"""
import argparse
import logging


logging.basicConfig(filename='C:\\Users\Aleksandr\PycharmProjects\python_GB_2\Logs\log_1.log',
                    filemode='a',
                    encoding='utf-8',
                    format='{levelname} - {asctime} –≤ —Å—Ç—Ä–æ–∫–µ {lineno} '
                           '—Ñ—É–Ω–∫—Ü–∏—è "{funcName}()" : {msg}',
                    style='{',
                    level=logging.INFO)
logger = logging.getLogger(__name__)
# logger.warning('–°–æ–æ–±—â–µ–Ω–∏–µ')



def division(a, b):
    try:
        res = a / b
        logger.info(f'a / b = ')
    except ZeroDivisionError:
        logger.error(
            f'–û—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å! –ß–∏—Å–ª–æ {a} –Ω–µ–ª—å–∑—è –ø–æ–¥–µ–ª–∏—Ç—å –Ω–∞ —á–∏—Å–ª–æ {b}')
        return float('inf')
    return res


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='–ü—Ä–∏–Ω–∏–º–∞–µ–º —Å—Ç—Ä–æ–∫—É')
    parser.add_argument('-a', metavar='a', type=float, help='–°–ø—Ä–∞–≤–∫–∞')
    parser.add_argument('-b', metavar='b', type=float, help='–°–ø—Ä–∞–≤–∫–∞')
    args = parser.parse_args()


    print(division(args.a, args.b))

    # print(args)
    # print(division(*args.param))
    # print(f'{division(15, 0)}')